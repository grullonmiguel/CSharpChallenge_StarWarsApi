<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="FontYellow" Color="#FFFFFF00" />
    <SolidColorBrush x:Key="ButtonColor" Color="#FFFFFF00" />
    <SolidColorBrush x:Key="ButtonColorOver" Color="#FFFFD300" />
    <SolidColorBrush x:Key="ButtonColorPressed" Color="#FFFDA50F" />
    <SolidColorBrush x:Key="ButtonColorDisabled" Color="#FFC3C3C6" />

    <Style TargetType="TextBlock" x:Key="BaseTextBlockStyle" >
        <Setter Property="Margin"                            Value="0"/>
        <Setter Property="FontSize"                          Value="14" />
        <Setter Property="FontFamily"                        Value="Segoe UI Light, Lucida Sans Unicode, Arial, Verdana" />
        <Setter Property="TextWrapping"                      Value="Wrap"/>
        <Setter Property="TextTrimming"                      Value="WordEllipsis" />
        <Setter Property="SnapsToDevicePixels"               Value="True" />
        <Setter Property="HorizontalAlignment"               Value="Left" />
        <Setter Property="VerticalAlignment"                 Value="Center"/>
        <Setter Property="Typography.StylisticSet20"         Value="True" />
        <Setter Property="Typography.DiscretionaryLigatures" Value="True" />
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}" x:Key="TextBlockSwapi">
        <Setter Property="Margin"                            Value="5"/>
        <Setter Property="FontWeight"                        Value="Bold" />
        <Setter Property="HorizontalAlignment"               Value="Center" />
        <Setter Property="Foreground"                        Value="{StaticResource FontYellow}" />
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="ButtonStyleBase" >
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{StaticResource ButtonColor}" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Margin="0">
                        <Border x:Name="Border" 
                                Background="{StaticResource ButtonColor}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="0" />
                        <TextBlock 
                            Text="{TemplateBinding Content}" 
                            Margin="{TemplateBinding Margin}" 
                            Padding="{TemplateBinding Padding}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{TemplateBinding Foreground}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource ButtonColorDisabled}" TargetName="Border" />
                            <Setter Property="Foreground" Value="#7f222222" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonColorOver}"  TargetName="Border" />
                            <Setter Property="Foreground" Value="#7f222222" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonColorPressed}" TargetName="Border" />
                            <Setter Property="Foreground" Value="#FFFFF888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource ButtonStyleBase}" >
    </Style>
    
    <Style TargetType="DataGrid" BasedOn="{x:Null}" >
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalGridLinesBrush" Value="#F8F8F8" />
        <Setter Property="GridLinesVisibility" Value="Horizontal" />
        <Setter Property="ClipboardCopyMode"  Value="IncludeHeader" />
        <Setter Property="BorderBrush" Value="red" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Setter Property="MinWidth" Value="25" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="VerticalAlignment" Value="Stretch" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="FontSize" Value="14" />
                    <Setter Property="FontFamily" Value="Arial, Verdana" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Grid Background="{TemplateBinding Background}" >
                                    <ContentPresenter VerticalAlignment="Center" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"  Value="Transparent"/>
                            <Setter Property="Foreground"  Value="#FF111111"/>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="#FF222222" />
                    <Setter Property="Foreground" Value="#FFFFFF99" />
                     <Setter Property="BorderThickness" Value="0" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background"  Value="Yellow"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#444444" />
                            <Setter Property="Foreground" Value="#FFFFFF" />
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>